{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/PopupWithForm.js","components/ButtonSubmit.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header/__logo/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","_baseUrl","baseUrl","_headers","headers","url","params","fetch","body","JSON","stringify","then","response","ok","json","Promise","reject","status","_fetch","method","authorization","Card","props","card","buttonDelete","owner","_id","userId","type","title","onClick","onDeleteBtnClick","link","name","onCardClick","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","setUserId","cards","setCards","useEffect","all","getInitialUserInfo","getInitialCards","user","about","avatar","catch","err","console","error","onEditAvatar","onEditProfile","onAddCard","map","key","Footer","ButtonClose","closeHandler","PopupWithForm","isOpen","noValidate","children","onClose","ButtonSubmit","ImagePopup","App","handleEditAvatarClick","bind","handleEditProfileClick","handleAddCardClick","handleCardClick","handleDeleteBtnClick","closeAllPopups","state","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddCardPopupOpen","isConfirmPopupOpen","selectedCard","setState","htmlFor","id","placeholder","required","minLength","maxLength","pattern","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.6cdc89e6.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/header/__logo/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__section\">\n      <img src={logo}\n        alt=\"Логотип сайта Место\"\n        className=\"header__logo\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","class Api  {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _fetch(url, params) {\n    return fetch(this._baseUrl + url, {\n      ...params,\n      headers: this._headers,\n      body: JSON.stringify(params.body)\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(`Ошибка: ${response.status}`);\n    })\n  }\n\n  getInitialUserInfo() {\n    return this._fetch('/users/me', {\n      method: 'GET'\n    });\n  }\n\n  getInitialCards() {\n    return this._fetch('/cards', {\n      method: 'GET'\n    });\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: 'bd0f2499-7585-4f83-9366-da3fa3857f94',\n    'Content-Type': 'application/json'\n  }\n});\n","import React from 'react';\n\nfunction Card(props) {\n  const card = props.card;\n\n  const buttonDelete = (card.owner._id === props.userId)\n    && <button type=\"button\" \n      className=\"elements__delete-btn\" title=\"Удалить\" \n      onClick={props.onDeleteBtnClick}></button>;\n\n  const handleClick = () => {\n    props.onCardClick(card);\n  };\n\n  return (\n    <div className=\"elements__item\">\n      {buttonDelete}\n      <img src={card.link}\n        alt={card.name}\n        className=\"elements__img\"\n        onClick={handleClick}\n      />\n      <div className=\"elements__info\">\n        <h2 className=\"elements__title\">{card.name}</h2>\n        <div className=\"elements__like\">\n          <button type=\"button\"\n            className=\"elements__like-btn\"\n            title=\"Мне нравится\">\n          </button>\n          <span className=\"elements__like-counter\">\n            {card.likes.length}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\nimport Card from './Card';\n\nfunction Main(props) {\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [userId, setUserId] = useState('');\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getInitialUserInfo(), api.getInitialCards()])\n    .then(([user, cards]) => {\n      setUserName(user.name);\n      setUserDescription(user.about);\n      setUserAvatar(user.avatar);\n      setUserId(user._id);\n      setCards(cards);\n    })\n    .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <main className=\"container page__section\">\n      <section className=\"profile container__profile\">\n        <div className=\"profile__avatar\">\n          <img src={userAvatar}\n            alt={userName}\n            className=\"profile__img\"\n          />\n          <button type=\"button\"\n            className=\"profile__update-av-btn\"\n            title=\"Сменить аватар\"\n            onClick={props.onEditAvatar}>\n          </button>\n        </div>\n        <div className=\"profile__details\">\n          <h1 className=\"profile__name\">{userName}</h1>\n          <button type=\"button\"\n            className=\"profile__edit-btn\"\n            title=\"Редактировать профиль\"\n            onClick={props.onEditProfile}>\n          </button>\n          <p className=\"profile__info\">{userDescription}</p>\n        </div>\n        <button type=\"button\"\n          className=\"profile__add-btn\"\n          title=\"Добавить фотографию\"\n          onClick={props.onAddCard}>\n        </button>\n      </section>\n      <section className=\"elements\">\n        {cards.map(card => {\n          return <Card\n            key={card._id}\n            card={card}\n            userId={userId}\n            onCardClick={props.onCardClick}\n            onDeleteBtnClick={props.onDeleteBtnClick}\n          />\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction ButtonClose(props) {\n  return (\n    <button type=\"button\"\n      className=\"popup__close-btn\"\n      title=\"Закрыть\"\n      onClick={props.closeHandler}>\n    </button>\n  );\n}\n\nexport default ButtonClose;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={\n      `popup popup_type_${props.name} \n      ${(props.isOpen) ? \"popup_opened\" : \"\"}`\n    }>\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"popup__form\" name={props.name} noValidate>\n          {props.children}\n        </form>\n        <ButtonClose closeHandler={props.onClose} />\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ButtonSubmit(props) {\n  return (\n    <button type=\"submit\" className=\"popup__submit-btn\">\n      {props.children}\n    </button>\n  );\n}\n\nexport default ButtonSubmit;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\n\nfunction ImagePopup(props) {\n  const card = props.card;\n\n  return ((props.isOpen !== null)\n    ? <div className=\"popup popup_type_img popup_opened\">\n        <div className=\"popup__img-wrapper\">\n          <img src={card.link}\n            alt={card.name}\n            className=\"popup__img\"\n          />\n          <p className=\"popup__img-title\">{card.name}</p>\n          <ButtonClose closeHandler={props.onClose} />\n        </div>\n      </div>  \n    : <div className=\"popup popup_type_img\"></div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\nimport ImagePopup from './ImagePopup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n    this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n    this.handleAddCardClick = this.handleAddCardClick.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n    this.handleDeleteBtnClick = this.handleDeleteBtnClick.bind(this);\n    this.closeAllPopups = this.closeAllPopups.bind(this);\n\n    this.state = {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddCardPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: null\n    }\n  }\n\n  handleEditAvatarClick() {\n    this.setState({ isEditAvatarPopupOpen: true });\n  }\n  handleEditProfileClick() {\n    this.setState({ isEditProfilePopupOpen: true });\n  }\n  handleAddCardClick() {\n    this.setState({ isAddCardPopupOpen: true });\n  }\n  handleCardClick(card) {\n    this.setState({ selectedCard: card });\n  }\n  handleDeleteBtnClick() {\n    this.setState({ isConfirmPopupOpen: true });\n  }\n  closeAllPopups() {\n    this.setState({\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddCardPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: null\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page__content\">\n        <Header />\n        <Main\n          onEditAvatar={this.handleEditAvatarClick}\n          onEditProfile={this.handleEditProfileClick}\n          onAddCard={this.handleAddCardClick}\n          onCardClick={this.handleCardClick}\n          onDeleteBtnClick={this.handleDeleteBtnClick}\n        />\n        <Footer />\n\n        <PopupWithForm\n          name=\"avatar\"\n          title=\"Обновить аватар\"\n          isOpen={this.state.isEditAvatarPopupOpen}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"av-input\">\n            <input type=\"url\" name=\"avatar\" id=\"av-input\"\n              className=\"popup__input\"\n              placeholder=\"Ссылка\" required />\n            <span className=\"popup__error\" id=\"av-input-error\"></span>\n          </label>\n          <ButtonSubmit>Сохранить</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"profile\"\n          title=\"Редактировать профиль\"\n          isOpen={this.state.isEditProfilePopupOpen}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"name-input\">\n            <input type=\"text\" name=\"name\" id=\"name-input\"\n              className=\"popup__input\"\n              placeholder=\"Имя\" required\n              minLength=\"2\" maxLength=\"40\"\n              pattern=\"[a-zA-Zа-яА-ЯёЁ\\s\\-]+\"\n            />\n            <span className=\"popup__error\" id=\"name-input-error\"></span>\n          </label>\n          <label className=\"popup__label\" htmlFor=\"info-input\">\n            <input type=\"text\" name=\"about\" id=\"info-input\"\n              className=\"popup__input\"\n              placeholder=\"О себе\" required\n              minLength=\"2\" maxLength=\"200\"\n            />\n            <span className=\"popup__error\" id=\"info-input-error\"></span>\n          </label>\n          <ButtonSubmit>Сохранить</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"card\"\n          title=\"Новое место\"\n          isOpen={this.state.isAddCardPopupOpen}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"title-input\">\n            <input type=\"text\" name=\"title\" id=\"title-input\"\n              className=\"popup__input\"\n              placeholder=\"Название\" required minLength=\"1\"\n              maxLength=\"30\"\n            />\n            <span className=\"popup__error\" id=\"title-input-error\"></span>\n          </label>\n          <label className=\"popup__label\" htmlFor=\"src-input\">\n            <input type=\"url\" name=\"src\" id=\"src-input\"\n              className=\"popup__input\"\n              placeholder=\"Ссылка\" required\n            />\n            <span className=\"popup__error\" id=\"src-input-error\"></span>\n          </label>\n          <ButtonSubmit>Создать</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          isOpen={this.state.isConfirmPopupOpen}\n          onClose={this.closeAllPopups}\n        >\n          <ButtonSubmit>Да</ButtonSubmit>\n        </PopupWithForm>\n\n        <ImagePopup\n          card={this.state.selectedCard}\n          isOpen={this.state.selectedCard}\n          onClose={this.closeAllPopups}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5746c0f0.svg\";"],"sourceRoot":""}