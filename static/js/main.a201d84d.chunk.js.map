{"version":3,"sources":["images/header/__logo/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/PopupContainer.js","components/PopupWithForm.js","components/ButtonSubmit.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","components/ConfirmPopup.js","components/ImagePopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","card","currentUser","useContext","isLiked","likes","some","i","_id","cardLikeBtnClassName","buttonDelete","owner","type","title","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddCard","cards","map","key","Footer","ButtonClose","closeHandler","PopupContainer","popupContainer","useRef","useEffect","document","addEventListener","handleClick","handleEsc","removeEventListener","evt","current","contains","target","ref","children","PopupWithForm","isOpen","onClose","id","noValidate","onSubmit","ButtonSubmit","buttonSubmitClassName","isDisabled","disabled","EditProfilePopup","useState","setName","description","setDescription","inputClass","errorClass","errorMsg","nameError","setNameError","descriptionError","setDescriptionError","isFormValid","setIsFormValid","isLoading","setIsLoading","preventDefault","onUpdateUser","catch","err","console","error","finally","htmlFor","placeholder","value","onChange","input","validity","valid","validationMessage","pattern","minLength","maxLength","required","EditAvatarPopup","handleChange","setState","hideInputError","showInputError","handleClose","handleSubmit","onUpdateAvatar","createRef","state","this","Component","AddCardPopup","updatedForm","formProps","updatedInput","form","onAddCardSubmit","ConfirmPopup","onCardDeleteConfirm","ImagePopup","api","options","_baseUrl","baseUrl","_headers","headers","url","params","fetch","body","JSON","stringify","then","response","ok","json","Promise","reject","status","_fetch","method","cardID","like","authorization","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCards","getUserInfo","user","getCardList","closeAllPopups","Provider","changeCardLikeStatus","newCard","newCards","c","setUserAvatar","setUserInfo","postCard","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a201d84d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5746c0f0.svg\";","import React from 'react';\nimport logo from '../images/header/__logo/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__section\">\n      <img src={logo}\n        alt=\"Логотип сайта Место\"\n        className=\"header__logo\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext(null);\n","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const {card} = props;\n  const currentUser = useContext(CurrentUserContext);\n  \n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  const cardLikeBtnClassName = (\n    `elements__like-btn ${isLiked && 'elements__like-btn_active'}`\n  );\n\n  const handleClick = () => {\n    props.onCardClick(card);\n  };\n  const handleLikeClick = () => {\n    props.onCardLike(card);\n  };\n  const handleDeleteClick = () => {\n    props.onCardDelete(card);\n  };\n\n  const buttonDelete = (card.owner._id === currentUser._id)\n  && <button type=\"button\" \n    className=\"elements__delete-btn\" title=\"Удалить\" \n    onClick={handleDeleteClick}></button>;\n\n  return (\n    <div className=\"elements__item\">\n      {buttonDelete}\n      <img\n        src={card.link}\n        alt={card.name}\n        className=\"elements__img\"\n        onClick={handleClick}\n      />\n      <div className=\"elements__info\">\n        <h2 className=\"elements__title\">{card.name}</h2>\n        <div className=\"elements__like\">\n          <button\n            type=\"button\"\n            className={cardLikeBtnClassName}\n            title=\"Мне нравится\"\n            onClick={handleLikeClick}>\n          </button>\n          <span className=\"elements__like-counter\">\n            {card.likes.length}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"container page__section\">\n      <section className=\"profile container__profile\">\n        <div className=\"profile__avatar\">\n          <img src={currentUser.avatar}\n            alt={currentUser.name}\n            className=\"profile__img\"\n          />\n          <button type=\"button\"\n            className=\"profile__update-av-btn\"\n            title=\"Сменить аватар\"\n            onClick={props.onEditAvatar}>\n          </button>\n        </div>\n        <div className=\"profile__details\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button type=\"button\"\n            className=\"profile__edit-btn\"\n            title=\"Редактировать профиль\"\n            onClick={props.onEditProfile}>\n          </button>\n          <p className=\"profile__info\">{currentUser.about}</p>\n        </div>\n        <button type=\"button\"\n          className=\"profile__add-btn\"\n          title=\"Добавить фотографию\"\n          onClick={props.onAddCard}>\n        </button>\n      </section>\n      <section className=\"elements\">\n        {props.cards.map(card => {\n          return <Card\n            key={card._id}\n            card={card}\n            onCardLike={props.onCardLike}\n            onCardClick={props.onCardClick}\n            onCardDelete={props.onCardDelete}\n          />\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction ButtonClose(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"popup__close-btn\"\n      title=\"Закрыть\"\n      onClick={props.closeHandler}>\n    </button>\n  );\n}\n\nexport default ButtonClose;\n","import React, { useEffect, useRef } from 'react';\n\nfunction PopupContainer(props) {\n  const popupContainer = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick, false);\n    document.addEventListener('keydown', handleEsc, false);\n\n    return () => {\n      document.removeEventListener('click', handleClick, false);\n      document.removeEventListener('keydown', handleEsc, false);\n    }\n  });\n\n  const handleClick = (evt) => {\n    if (\n      popupContainer.current \n      && !popupContainer.current.contains(evt.target)\n    ) {\n      props.closeHandler();\n    }\n  };\n\n  const handleEsc = (evt) => {\n    if (evt.key && evt.key === 'Escape') {\n      props.closeHandler();\n    }\n  };\n\n  return (\n    <div className={props.className} ref={popupContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default PopupContainer;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport PopupContainer from './PopupContainer';\n\nfunction PopupWithForm(props) {\n  return ((props.isOpen)\n    ? <div className={`popup popup_type_${props.name} popup_opened`}>\n        <PopupContainer\n          className=\"popup__container\"\n          closeHandler={props.onClose}\n        >\n          <h2 className=\"popup__title\">{props.title}</h2>\n          <form\n            className=\"popup__form\"\n            name={props.name}\n            id={`${props.name}-form`}\n            noValidate\n            onSubmit={props.onSubmit}\n          >\n            {props.children}\n          </form>\n          <ButtonClose closeHandler={props.onClose} />\n        </PopupContainer>\n      </div>\n    : <div className={`popup popup_type_${props.name}`}></div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ButtonSubmit(props) {\n  const buttonSubmitClassName = (\n    `popup__submit-btn ${props.isDisabled ? 'popup__submit-btn_disabled' : ''}`\n  );\n\n  return (\n    <button\n      type=\"submit\"\n      className={buttonSubmitClassName}\n      disabled={props.isDisabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default ButtonSubmit;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [nameError, setNameError] = useState({\n    inputClass: '',\n    errorClass: '',\n    errorMsg: ''\n  });\n  const [descriptionError, setDescriptionError] = useState({\n    inputClass: '',\n    errorClass: '',\n    errorMsg: ''\n  });\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleNameChange = (evt) => {\n    const input = evt.target;\n    setName(input.value);\n\n    if (!input.validity.valid) {\n      setNameError({\n        inputClass: 'popup__input_type_error',\n        errorClass: 'popup__error_visible',\n        errorMsg: input.validationMessage\n      });\n      setIsFormValid(false);\n    } else {\n      setNameError({\n        inputClass: '',\n        errorClass: '',\n        errorMsg: ''\n      });\n      setIsFormValid(true);\n    }\n  };\n\n  const handleDescriptionChange = (evt) => {\n    const input = evt.target;\n    setDescription(input.value);\n\n    if (!input.validity.valid) {\n      setDescriptionError({\n        inputClass: 'popup__input_type_error',\n        errorClass: 'popup__error_visible',\n        errorMsg: input.validationMessage\n      });\n      setIsFormValid(false);\n    } else {\n      setDescriptionError({\n        inputClass: '',\n        errorClass: '',\n        errorMsg: ''\n      });\n      setIsFormValid(true);\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setIsLoading(true);\n\n    props.onUpdateUser({\n      name,\n      about: description\n    })\n    .catch(err => console.error(err))\n    .finally(() => {\n      setIsFormValid(true);\n      setIsLoading(false);\n    });\n  };\n\n  const handleClose = () => {\n    props.onClose();\n\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    setIsFormValid(true);\n    setNameError({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: ''\n    });\n    setDescriptionError({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: ''\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={props.isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"popup__label\" htmlFor=\"name-input\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name-input\"\n          className={`popup__input ${nameError.inputClass}`}\n          placeholder=\"Имя\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"[a-zA-Zа-яА-ЯёЁ\\s-]+\"\n          minLength={2}\n          maxLength={40}\n          required={true}\n        />\n        <span\n          className={`popup__error ${nameError.errorClass}`}\n          id=\"name-input-error\"\n        >\n          {nameError.errorMsg}\n        </span>\n      </label>\n      <label className=\"popup__label\" htmlFor=\"about-input\">\n        <input\n          type=\"text\"\n          name=\"about\"\n          id=\"about-input\"\n          className={`popup__input ${descriptionError.inputClass}`}\n          placeholder=\"О себе\"\n          value={description}\n          onChange={handleDescriptionChange}\n          minLength={2}\n          maxLength={200}\n          required={true}\n        />\n        <span\n          className={`popup__error ${descriptionError.errorClass}`}\n          id=\"about-input-error\"\n        >\n          {descriptionError.errorMsg}\n        </span>\n      </label>\n      <ButtonSubmit isDisabled={!isFormValid}>\n        {isLoading ? 'Загрузка...' : 'Сохранить'}\n      </ButtonSubmit>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nclass EditAvatarPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.avatar = React.createRef();\n\n    this.state = {\n      inputClass: '',\n      errorClass: '',\n      errorMsg: '',\n      isFormValid: false,\n      isLoading: false\n    };\n  }\n\n  render() {\n    return (\n      <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        isOpen={this.props.isOpen}\n        onClose={this.handleClose}\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"popup__label\" htmlFor=\"avatar-input\">\n          <input \n            type=\"url\"\n            name=\"avatar\"\n            className={`popup__input ${this.state.inputClass}`}\n            id=\"avatar-input\"\n            ref={this.avatar}\n            onChange={this.handleChange}\n            placeholder=\"Ссылка\"\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.errorClass}`}\n            id=\"avatar-input-error\"\n          >\n            {this.state.errorMsg}\n          </span>\n        </label>\n        <ButtonSubmit isDisabled={!this.state.isFormValid}>\n          {this.state.isLoading ? 'Загрузка...' : 'Сохранить'}\n        </ButtonSubmit>\n      </PopupWithForm>\n    );\n  }\n\n  handleChange = () => {\n    const avatar = this.avatar.current;\n\n    if (!avatar.validity.valid) {\n      this.setState({ isFormValid: false });\n      this.showInputError(avatar);\n    } else {\n      this.setState({ isFormValid: true });\n      this.hideInputError();\n    }\n  }\n\n  showInputError = (avatar) => {\n    this.setState({\n      inputClass: 'popup__input_type_error',\n      errorClass: 'popup__error_visible',\n      errorMsg: avatar.validationMessage\n    });\n  }\n\n  hideInputError = () => {\n    this.setState({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: ''\n    });\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n    this.setState({ isFormValid: false });\n    this.hideInputError();\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.setState({ isLoading: true });\n\n    this.props.onUpdateAvatar({\n      avatar: this.avatar.current.value\n    })\n    .catch(err => console.error(err))\n    .finally(() => {\n      this.setState({\n        isFormValid: false,\n        isLoading: false\n      });\n      this.hideInputError();\n    });\n  }\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nclass AddCardPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.title = React.createRef();\n    this.src = React.createRef();\n\n    this.state = {\n      formProps: {\n        title: {\n          inputClass: '',\n          errorClass: '',\n          errorMsg: '',\n        },\n        src: {\n          inputClass: '',\n          errorClass: '',\n          errorMsg: '',\n        }\n      },\n      isFormValid: false,\n      isLoading: false\n    };\n  }\n\n  render() {\n    return (\n      <PopupWithForm\n        name=\"card\"\n        title=\"Новое место\"\n        isOpen={this.props.isOpen}\n        onClose={this.handleClose}\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"popup__label\" htmlFor=\"title-input\">\n          <input \n            type=\"text\"\n            name=\"title\"\n            className={`popup__input ${this.state.formProps.title.inputClass}`}\n            id=\"title-input\"\n            ref={this.title}\n            onChange={this.handleChange}\n            placeholder=\"Название\"\n            minLength={1}\n            maxLength={30}\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.formProps.title.errorClass}`} \n            id=\"title-input-error\"\n          >\n            {this.state.formProps.title.errorMsg}\n          </span>\n        </label>\n        <label className=\"popup__label\" htmlFor=\"src-input\">\n          <input \n            type=\"url\"\n            name=\"src\"\n            className={`popup__input ${this.state.formProps.src.inputClass}`}\n            id=\"src-input\"\n            ref={this.src}\n            onChange={this.handleChange}\n            placeholder=\"Ссылка\"\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.formProps.src.errorClass}`} \n            id=\"src-input-error\"\n          >\n            {this.state.formProps.src.errorMsg}\n          </span>\n        </label>\n        <ButtonSubmit isDisabled={!this.state.isFormValid}>\n          {this.state.isLoading ? 'Загрузка...' : 'Создать'}\n        </ButtonSubmit>\n      </PopupWithForm>\n    );\n  }\n\n  handleChange = (evt) => {\n    const target = this[evt.target.name].current;\n    const input = target.name;\n\n    const updatedForm = { ...this.state.formProps };\n    const updatedInput = { ...updatedForm[input] };\n\n    let isFormValid = true;\n    for (let input in updatedForm) {\n      isFormValid = isFormValid\n        && this[input].current.validity.valid;\n    }\n\n    if (!target.validity.valid) {\n      this.showInputError(target, updatedInput);\n    } else {\n      this.hideInputError(updatedInput);\n    }\n\n    updatedForm[input] = updatedInput;\n\n    this.setState({\n      formProps: updatedForm,\n      isFormValid: isFormValid\n    });\n  }\n\n  showInputError = (name, input) => {\n    input.inputClass = 'popup__input_type_error';\n    input.errorClass = 'popup__error_visible';\n    input.errorMsg = name.validationMessage;\n  }\n\n  hideInputError = (input) => {\n    input.inputClass = '';\n    input.errorClass = '';\n    input.errorMsg = '';\n  }\n\n  handleClose = () => {\n    const form = this.state.formProps;\n\n    this.props.onClose();\n    this.setState({ isFormValid: false });\n\n    for (let input in form) {\n      this.hideInputError(form[input]);\n    }\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.setState({ isLoading: true });\n\n    const form = this.state.formProps;\n\n    this.props.onAddCardSubmit({\n      name: this.title.current.value,\n      link: this.src.current.value\n    })\n    .catch(err => console.error(err))\n    .finally(() => {\n      this.setState({\n        isFormValid: false,\n        isLoading: false\n      });\n      for (let input in form) {\n        this.hideInputError(form[input]);\n      }\n    });\n  }\n}\n\nexport default AddCardPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nfunction ConfirmPopup(props) {\n  const {card} = props;\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    props.onCardDeleteConfirm(card._id);\n  };\n\n  return (\n    <PopupWithForm\n      name=\"confirm\"\n      title=\"Вы уверены?\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <ButtonSubmit>Да</ButtonSubmit>\n    </PopupWithForm>\n  );\n}\n\nexport default ConfirmPopup;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport PopupContainer from './PopupContainer';\n\nfunction ImagePopup(props) {\n  const {card} = props;\n\n  return ((props.isOpen)\n    ? <div className=\"popup popup_type_img popup_opened\">\n        <PopupContainer\n          className=\"popup__img-wrapper\"\n          closeHandler={props.onClose}\n        >\n          <img\n            src={card.link}\n            alt={card.name}\n            className=\"popup__img\"\n          />\n          <p className=\"popup__img-title\">{card.name}</p>\n          <ButtonClose closeHandler={props.onClose} />\n        </PopupContainer>\n      </div>  \n    : <div className=\"popup popup_type_img\"></div>\n  );\n}\n\nexport default ImagePopup;\n","class Api  {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _fetch(url, params) {\n    return fetch(this._baseUrl + url, {\n      ...params,\n      headers: this._headers,\n      body: JSON.stringify(params.body)\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(`Ошибка: ${response.status}`);\n    });\n  }\n\n  getUserInfo() {\n    return this._fetch('/users/me', {\n      method: 'GET'\n    });\n  }\n\n  getCardList() {\n    return this._fetch('/cards', {\n      method: 'GET'\n    });\n  }\n\n  postCard({ name, link }) {\n    return this._fetch('/cards', {\n      method: 'POST',\n      body: {\n        name,\n        link\n      }\n    });\n  }\n\n  changeCardLikeStatus(cardID, like) {\n    return this._fetch('/cards/likes/' + cardID, {\n      method: like ? 'PUT' : 'DELETE'\n    });\n  }\n\n  deleteCard(cardID) {\n    return this._fetch('/cards/' + cardID, {\n      method: 'DELETE'\n    });\n  }\n\n  setUserInfo({ name, about }) {\n    return this._fetch('/users/me', {\n      method: 'PATCH',\n      body: {\n        name,\n        about\n      }\n    });\n  }\n\n  setUserAvatar({ avatar }) {\n    return this._fetch('/users/me/avatar', {\n      method: 'PATCH',\n      body: {\n        avatar\n      }\n    });\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: 'bd0f2499-7585-4f83-9366-da3fa3857f94',\n    'Content-Type': 'application/json'\n  }\n});\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddCardPopup from './AddCardPopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api.getUserInfo()\n    .then(user => setCurrentUser(user))\n    .catch(err => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    api.getCardList()\n    .then((cards) => setCards(cards))\n    .catch(err => console.error(err));\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddCardClick = () => {\n    setIsAddCardPopupOpen(true);\n  };\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n  const handleConfirmPopup = (card) => {\n    setSelectedCard(card);\n    setIsConfirmPopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = ({ name, about }) => {\n    return api.setUserInfo({ name, about })\n    .then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    });\n  };\n\n  const handleUpdateAvatar = ({ avatar }) => {\n    return api.setUserAvatar({ avatar })\n    .then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeCardLikeStatus(card._id, !isLiked)\n    .then((newCard) => {\n      const newCards = cards.map((c) => (\n        c._id === card._id ? newCard : c\n      ));\n\n      setCards(newCards);\n    })\n    .catch(err => console.error(err));\n  };\n\n  const handleCardDelete = (cardID) => {\n    api.deleteCard(cardID)\n    .then((newCard) => {\n      const newCards = cards.filter((c) => (\n        c._id === cardID ? null : newCard\n      ));\n\n      setCards(newCards);\n      closeAllPopups();\n    })\n    .catch(err => console.error(err));\n  };\n\n  const handleAddCardSubmit = ({ name, link }) => {\n    return api.postCard({ name, link })\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    });\n  };\n\n  if (!currentUser) return null;\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddCard={handleAddCardClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmPopup}\n        />\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddCardPopup\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          onAddCardSubmit={handleAddCardSubmit}\n        />\n\n        <ConfirmPopup\n          card={selectedCard}\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDeleteConfirm={handleCardDelete}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}